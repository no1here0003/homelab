---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: downloads
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m

  # dependsOn:
  #   - name: pod-gateway
  #     namespace: vpn

  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5

  values:
    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.0.584@sha256:4e5e11018b6abf308f9add1ae187fc6500ca647ad0fe1de133450a303a1563cc
    env:
      TZ: "America/New_York"
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 8989
      SONARR__LOG_LEVEL: info
    service:
      main:
        ports:
          http:
            port: *port

    # probes:
    #   liveness: &probes
    #     enabled: true
    #     custom: true
    #     spec:
    #       httpGet:
    #         path: /ping
    #         port: *port
    #       initialDelaySeconds: 0
    #       periodSeconds: 10
    #       timeoutSeconds: 1
    #       failureThreshold: 3
    #   readiness: *probes
    #   startup:
    #     enabled: false

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        hosts:
          - host: &host "sonarr.${INTERNAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
          - secretName: sonarr-tls

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [44, 109, 10000]

    persistence:

      config:
        enabled: true
        existingClaim: sonarr-config

      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS1_ADDR}"
            path: /volume1/Media
        mountPath: /media

      media2:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS2_ADDR}"
            path: /volume1/Media2
        mountPath: /media2

      media3:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS3_ADDR}"
            path: /volume1/Plex
        mountPath: /media3

      temp:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS1_ADDR}"
            path: /volume1/temp
        mountPath: /temp_dir

      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS2_ADDR}"
            path: /volume1/Kubernetes/sonarr
        mountPath: /config/Backups

    resources:
      requests:
        memory: 1795M
        cpu: 10m
      limits:
        memory: 16G
        cpu: 8500m
